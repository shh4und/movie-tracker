-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default",
    last_name character varying(50) COLLATE pg_catalog."default",
    photo_url character varying(255) COLLATE pg_catalog."default",
    status character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.titles
(
    id serial NOT NULL,
    title character varying(255) COLLATE pg_catalog."default",
    year character varying(4) COLLATE pg_catalog."default",
    rated character varying(10) COLLATE pg_catalog."default",
    released character varying(20) COLLATE pg_catalog."default",
    runtime character varying(10) COLLATE pg_catalog."default",
    genre character varying(255) COLLATE pg_catalog."default",
    director character varying(255) COLLATE pg_catalog."default",
    writer character varying(255) COLLATE pg_catalog."default",
    actors character varying(255) COLLATE pg_catalog."default",
    plot text COLLATE pg_catalog."default",
    language character varying(50) COLLATE pg_catalog."default",
    country character varying(50) COLLATE pg_catalog."default",
    awards character varying(255) COLLATE pg_catalog."default",
    poster text COLLATE pg_catalog."default",
    imdb_rating character varying(10) COLLATE pg_catalog."default",
    imdb_id character varying(20) COLLATE pg_catalog."default",
    type character varying(20) COLLATE pg_catalog."default",
    production character varying(255) COLLATE pg_catalog."default",
    response character varying(10) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT titles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comments
(
    id serial NOT NULL,
    user_id integer,
    movie_id integer NOT NULL,
    text text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT comments_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public.user_favorites
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    movie_id integer NOT NULL,
    CONSTRAINT user_favorites_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_ratings
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    movie_id integer NOT NULL,
    rating integer,
    CONSTRAINT user_ratings_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public.watch_later
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    movie_id integer NOT NULL,
    CONSTRAINT watch_later_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.watched_movies
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    movie_id integer NOT NULL,
    watched_on timestamp without time zone,
    CONSTRAINT watched_movies_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.comments
    ADD CONSTRAINT comments_movie_id_fkey FOREIGN KEY (movie_id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.comments
    ADD CONSTRAINT comments_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_favorites
    ADD CONSTRAINT user_favorites_movie_id_fkey FOREIGN KEY (movie_id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_favorites
    ADD CONSTRAINT user_favorites_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_ratings
    ADD CONSTRAINT user_ratings_movie_id_fkey FOREIGN KEY (movie_id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_ratings
    ADD CONSTRAINT user_ratings_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.watch_later
    ADD CONSTRAINT watch_later_movie_id_fkey FOREIGN KEY (movie_id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.watch_later
    ADD CONSTRAINT watch_later_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.watched_movies
    ADD CONSTRAINT watched_movies_movie_id_fkey FOREIGN KEY (movie_id)
    REFERENCES public.titles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.watched_movies
    ADD CONSTRAINT watched_movies_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;